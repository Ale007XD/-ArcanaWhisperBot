name: Deploy Telegram Bot to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}

      - name: Add SSH host
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Deploy to VPS
        env:
          VPS_USER: ${{ secrets.VPS_USERNAME }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
          REPO_URL: "git@github.com:${{ github.repository }}.git" # URL для клонирования через SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.VPS_USER }}@${{ env.VPS_HOST }} "
            set -e

            echo 'Navigating to project directory...'
            cd ${{ secrets.PROJECT_PATH }} || mkdir -p ${{ secrets.PROJECT_PATH }} && cd ${{ secrets.PROJECT_PATH }}

            echo 'Stopping old container if it exists...'
            # ИЗМЕНЕНИЕ №1: используем docker-compose
            docker-compose down

            echo 'Pulling latest code...'
            if [ ! -d .git ]; then
              git clone ${{ env.REPO_URL }} .
            else
              git fetch origin main
              git reset --hard origin/main
            fi

            echo 'Building and starting new container...'
            # ИЗМЕНЕНИЕ №2: используем docker-compose
            docker-compose up --build -d
            
            echo 'Cleaning up old images...'
            docker image prune -af
            
            echo 'Deployment finished successfully!'
          "
